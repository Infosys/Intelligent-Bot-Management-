<?xml version="1.0" encoding="utf-8"?>
<!--

Copyright 2021 Infosys Ltd. 
Use of this source code is governed by Apache License Version 2.0 that can be found in the LICENSE file or at 
http://www.apache.org/licenses/
-->
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="LISettings" type="Infosys.Lif.LegacyIntegratorService.ConfigHandler, Infosys.Lif.LegacyIntegratorService" />
    <section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="exceptionHandling" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Configuration.ExceptionHandlingSettings, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
    <section name="dataConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Data.Configuration.DatabaseSettings, Microsoft.Practices.EnterpriseLibrary.Data, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" requirePermission="true" />
  </configSections>
  <loggingConfiguration name="SuperbotLogging" tracingEnabled="true" defaultCategory="General">
    <listeners>
      <add name="Database Trace Listener" type="Microsoft.Practices.EnterpriseLibrary.Logging.Database.FormattedDatabaseTraceListener, Microsoft.Practices.EnterpriseLibrary.Logging.Database, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Database.Configuration.FormattedDatabaseTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging.Database, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" databaseInstanceName="SuperBotLogsStore" writeLogStoredProcName="WriteLog" addCategoryStoredProcName="AddCategory" formatter="Text Formatter" traceOutputOptions="DateTime" />
    </listeners>
    <formatters>
      <add type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" template="ActivityId: {property(ActivityId)}{newline} Timestamp: {timestamp}{newline} Message: {message}{newline} Category: {category}{newline} Priority: {priority}{newline} EventId: {eventid}{newline} Severity: {severity}{newline} Title:{title}{newline} Machine: {localMachine}{newline} App Domain: {localAppDomain}{newline} ProcessId: {localProcessId}{newline} Process Name: {localProcessName}{newline} Thread Name: {threadName}{newline} Win32 ThreadId:{win32ThreadId}{newline} Extended Properties: {dictionary({key} - {value}{newline})}" name="Text Formatter" />
    </formatters>
    <categorySources>
      <!--<add switchValue="Off" name="System.ServiceModel">
        <listeners>
          <add name="XML Trace Listener"/>
        </listeners>
      </add>-->
      <add switchValue="Error" name="General">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Off" name="Performance">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Information" name="Statistics">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
      <add switchValue="Off" name="MessageArchive">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </add>
    </categorySources>
    <specialSources>
      <allEvents switchValue="All" name="All Events" />
      <notProcessed switchValue="All" name="Unprocessed Category" />
      <errors switchValue="All" name="Logging Errors &amp; Warnings">
        <listeners>
          <add name="Database Trace Listener" />
        </listeners>
      </errors>
    </specialSources>
  </loggingConfiguration>
  <exceptionHandling>
    <exceptionPolicies>
      <add name="Superbot.Service">
        <exceptionTypes>
          <add name="SuperbotException" type="Infosys.Solutions.Superbot.Infrastructure.Common.SuperbotException, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="2"/>
              <add type="Infosys.Solutions.Superbot.Infrastructure.Common.HTTPErrorExceptionHandler, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler"/>
            </exceptionHandlers>
          </add>
          <add name="SuperbotCriticalException" type="Infosys.Solutions.Superbot.Infrastructure.Common.SuperbotCriticalException, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Critical" title="Superbot Exceptions" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="1"/>
              <add name="Replace Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" exceptionMessageResourceName="Critical" exceptionMessageResourceType="Infosys.Solutions.Superbot.Infrastructure.Common.ErrorMessages, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" replaceExceptionType="Infosys.Solutions.Superbot.Infrastructure.Common.SuperbotException, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null"/>
              <add type="Infosys.Solutions.Superbot.Infrastructure.Common.HTTPErrorExceptionHandler, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler"/>
            </exceptionHandlers>
          </add>
          <add name="SuperbotDataItemNotFoundException" type="Infosys.Solutions.Superbot.Infrastructure.Common.SuperbotDataItemNotFoundException, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Error" title="Superbot Exceptions" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="2"/>
              <add type="Infosys.Solutions.Superbot.Infrastructure.Common.HTTPErrorExceptionHandler, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler"/>
            </exceptionHandlers>
          </add>
          <add name="SuperbotValidationException" type="Infosys.Solutions.Superbot.Infrastructure.Common.SuperbotValidationException, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add type="Infosys.Solutions.Superbot.Infrastructure.Common.HTTPErrorExceptionHandler, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler"/>
            </exceptionHandlers>
          </add>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Error" title="Superbot Exceptions" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="2"/>
              <add name="Replace Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" exceptionMessageResourceName="Critical" exceptionMessageResourceType="Infosys.Solutions.Superbot.Infrastructure.Common.ErrorMessages, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" replaceExceptionType="Infosys.Solutions.Superbot.Infrastructure.Common.SuperbotException, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null"/>
              <add type="Infosys.Solutions.Superbot.Infrastructure.Common.HTTPErrorExceptionHandler, Infosys.Ainauto.Superbot.Common, Version=1.1.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler"/>
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>
  <!--<exceptionHandling>
    <exceptionPolicies>
      <add name="Superbot.Service">
        <exceptionTypes>
          <add name="SuperbotException" type="Infosys.Solutions.Superbot.Infrastructure.Common.DIFException, Infosys.Solutions.Superbot.Infrastructure.Common.SuperbotException, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Error" title="Enterprise Library Exception Handling" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="2" />
              <add type="Infosys.Solutions.Superbot.Infrastructure.Common.HTTPErrorExceptionHandler, Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler" />
            </exceptionHandlers>
          </add>
          <add name="SuperbotCriticalException" type="Infosys.Solutions.Superbot.Infrastructure.Common.DIFCriticalException, Infosys.Solutions.Superbot.Infrastructure.Common.SuperbotCriticalException, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Critical" title="DIF Exceptions" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="1" />
              <add name="Replace Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" exceptionMessageResourceName="Critical" exceptionMessageResourceType="Infosys.Solutions.DocumentImageFinder.Infrastructure.Common.ErrorMessages, Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" replaceExceptionType="Infosys.Solutions.DocumentImageFinder.Infrastructure.Common.DIFException, Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" />
              <add type="Infosys.Solutions.Superbot.Infrastructure.Common.HTTPErrorExceptionHandler, Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler" />
            </exceptionHandlers>
          </add>
          <add name="SuperbotDataItemNotFoundException" type="Infosys.Solutions.Superbot.Infrastructure.Common.DIFDataItemNotFoundException, Infosys.Solutions.Superbot.Infrastructure.Common.SuperbotDataItemNotFoundException, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Error" title="DIF Exceptions" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="2" />
              <add type="Infosys.Solutions.Superbot.Infrastructure.Common.HTTPErrorExceptionHandler, Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler" />
            </exceptionHandlers>
          </add>
          <add name="SuperbotValidationException" type="Infosys.Solutions.Superbot.Infrastructure.Common.DIFValidationException, Infosys.Solutions.Superbot.Infrastructure.Common.SuperbotValidationException, Infosys.Ainauto.Superbot.Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" postHandlingAction="ThrowNewException">
            <exceptionHandlers>
              <add type="Infosys.Solutions.Superbot.Infrastructure.Common.HTTPErrorExceptionHandler, Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler" />
            </exceptionHandlers>
          </add>
          <add name="All Exceptions" type="System.Exception, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" postHandlingAction="None">
            <exceptionHandlers>
              <add name="Logging Exception Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging.LoggingExceptionHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.Logging, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" logCategory="General" eventId="502" severity="Error" title="DIF Exceptions" formatterType="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.TextExceptionFormatter, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling" priority="2" />
              <add name="Replace Handler" type="Microsoft.Practices.EnterpriseLibrary.ExceptionHandling.ReplaceHandler, Microsoft.Practices.EnterpriseLibrary.ExceptionHandling, Version=5.0.505.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" exceptionMessageResourceName="Critical" exceptionMessageResourceType="Infosys.Solutions.DocumentImageFinder.Infrastructure.Common.ErrorMessages, Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" replaceExceptionType="Infosys.Solutions.DocumentImageFinder.Infrastructure.Common.DIFException, Common, Version=1.0.0.*, Culture=neutral, PublicKeyToken=null" />
              <add type="Infosys.Solutions.Superbot.Infrastructure.Common.HTTPErrorExceptionHandler, Common, Version=1.1.0.*, Culture=neutral, PublicKeyToken=null" name="HTTPErrorExceptionHandler" />
            </exceptionHandlers>
          </add>
        </exceptionTypes>
      </add>
    </exceptionPolicies>
  </exceptionHandling>-->
  <dataConfiguration defaultDatabase="SuperbotDB" />
  <LISettings configSource="Configuration\LISettings.config" />
  <appSettings>
    <add key="ServiceBaseUrl" value="http://superbot_servername/Superbot/api" />
    <add key="SCCServiceBaseUrl" value="http://scc_servername/iapwemservices" />
    <add key="PlatformID" value="1" />
    <add key="TenantID" value="1" />
    <add key="EnableAllLogs" value="true" />
    <add key="SecureKey" value="IAP2GO_SEC!URE" />
    <add key="EnablePerformanceLog" value="true" />
  </appSettings>
  <connectionStrings>
	 <add name="SuperBotLogsStore" connectionString="Database=SuperBot_Logs;Server=dbServer;Integrated Security=SSPI" providerName="System.Data.SqlClient" />
    <add name="SuperbotDB" connectionString="metadata=res://*/SuperBotStore.csdl|res://*/SuperBotStore.ssdl|res://*/SuperBotStore.msl;provider=System.Data.SqlClient;provider connection string=&quot;data source=dbServer;initial catalog=superbot;persist security info=True;integrated security=True;MultipleActiveResultSets=True;App=EntityFramework&quot;" providerName="System.Data.EntityClient" />
  </connectionStrings>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.EnterpriseLibrary.Logging" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.505.0" newVersion="5.0.505.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.EnterpriseLibrary.Common" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.0.505.0" newVersion="5.0.505.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.diagnostics>
    <trace autoflush="true" indentsize="4">
      <listeners>
        <add name="MyListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="TextWriterOutput.log" />
        <remove name="Default" />
      </listeners>
    </trace>
  </system.diagnostics>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1" />
    </startup>
</configuration>
