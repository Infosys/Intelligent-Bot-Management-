<?xml version="1.0" encoding="utf-8" ?>
<!--
   - Â© 2013 Infosys Limited, Bangalore, India. All Rights Reserved.
   - Version: 1.0
   - Except for any open source software components embedded in this Infosys proprietory software program ("Program"),
   - this Program is protected by copyright laws, international treaties and other pending or existing interllectual
   - property rights in India, the United States and other countries. Except as expressly premitted, any unauthorized
   - reproduction, storage, transmission in any form or by any means (including without limitation electronic, mechanical,
   - printing, photocopying, recording or otherwise), or any distribution of this Program, or any portion of it, may
   - results in severe civil and criminal penalties, and will be prosecuted to the maximum extent possible under the law.
 -->
<LISettings xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!-- Provide region details of the host -->
  <HostRegion>
    <Region>
      <Name>test1</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test1</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test2</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test2</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test3</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test3</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test4</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test4</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test5</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test5</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test6</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test6</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test7</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test7</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test8</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test8</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test9</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test9</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test10</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test10</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test11</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test11</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test12</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test12</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test13</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test13</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test14</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test14</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test15</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test15</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>
    <Region>
      <Name>test16</Name>
      <!-- use the transport medium and name from the below mentioned transport types -->
      <TransportMedium>MSMQ</TransportMedium>
      <TransportName>test16</TransportName>
      <!--Communication Type can be "Sync" or "Async" for synchronous and asynchronous respectively -->
      <CommunicationType>Sync</CommunicationType>
    </Region>-->
  </HostRegion>

  <!-- Provide all details for communicating with MSMQ -->
  <MSMQ xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <DllPath>Infosys.Lif.MSMQ.dll</DllPath>
    <TypeName>Infosys.Lif.MSMQAdapter</TypeName>
    <MSMQDetails>
      <TransportName>test1</TransportName>
      <!--The Server where the MSMQ is installed. For local server, even '.' is allowed-->
      <ServerName>localhost</ServerName>
      <!--The main transaction/processing Queue-->
      <QueueName>test1</QueueName>
      <!--The Queue for the poison message(s)-->
      <PoisonQueueName>test51</PoisonQueueName>
      <!--The label on the message, which can also be used to categorize, e.g. pptware-->
      <MessageLabel>encodehtml</MessageLabel>
      <!--QueueType can be Private or Public-->
      <QueueType>Private</QueueType>
      <!--QueueReadingType can be Receive or Peek-->
      <QueueReadingType>Receive</QueueReadingType>
      <!--QueueReadingMode can be Sync or Async-->
      <QueueReadingMode>Sync</QueueReadingMode>
      <!--The Maximum number of trial for processing a message before being pushed to the poison queue-->
      <MessageProcessingMaxCount>5</MessageProcessingMaxCount>
      <!--Boolean to depict if the message is to be deleted immediately after Receive call i.e. no need for explicit Delete call.
        False- the message will be made invisible for duration same as MessaseInvisibilityTimeout.
        N.B.- Not needed for the newMSMQAdapter-->
      <ReadAndDelete>false</ReadAndDelete>
      <!--The duration (ms)  for which the message is made invisible after it is read.-->
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <!--The duration (ms) for which the framework will try to look for message (if not received any) in the queue in each trial-->
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>3000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <!--The duration (second) for which the framework will wait for a transaction, 
      if no transaction in the queue it will reinitate the queue in Async receive process -->
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test2</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test2</QueueName>
      <PoisonQueueName>test52</PoisonQueueName>
      <MessageLabel>encodeimage</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>5</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>3000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test3</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test3</QueueName>
      <PoisonQueueName>test53</PoisonQueueName>
      <MessageLabel>newtag</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test4</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test4</QueueName>
      <PoisonQueueName>test54</PoisonQueueName>
      <MessageLabel>companytagssummary</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test5</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test5</QueueName>
      <PoisonQueueName>test55</PoisonQueueName>
      <MessageLabel>companyusertagssummary</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test6</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test6</QueueName>
      <PoisonQueueName>test56</PoisonQueueName>
      <MessageLabel>presentationshare</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test7</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test7</QueueName>
      <PoisonQueueName>test57</PoisonQueueName>
      <MessageLabel>notification</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test8</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test8</QueueName>
      <PoisonQueueName>test58</PoisonQueueName>
      <MessageLabel>assemble</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>5</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test9</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test9</QueueName>
      <PoisonQueueName>test59</PoisonQueueName>
      <MessageLabel>assemblyfailure</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>5</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>3000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test10</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test10</QueueName>
      <PoisonQueueName>test60</PoisonQueueName>
      <MessageLabel>encodingfailure</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>5</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>3000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test11</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test11</QueueName>
      <PoisonQueueName>test61</PoisonQueueName>
      <MessageLabel>mycollection</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test12</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test12</QueueName>
      <PoisonQueueName>test62</PoisonQueueName>
      <MessageLabel>presentationactivity</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test13</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test13</QueueName>
      <PoisonQueueName>test63</PoisonQueueName>
      <MessageLabel>assembleanalyze</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test14</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test14</QueueName>
      <PoisonQueueName>test64</PoisonQueueName>
      <MessageLabel>encodecompile</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test15</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test15</QueueName>
      <PoisonQueueName>test65</PoisonQueueName>
      <MessageLabel>imageconversion</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
    <MSMQDetails>
      <TransportName>test16</TransportName>
      <ServerName>localhost</ServerName>
      <QueueName>test16</QueueName>
      <PoisonQueueName>test66</PoisonQueueName>
      <MessageLabel>synchronizesearchmetadata</MessageLabel>
      <QueueType>Private</QueueType>
      <QueueReadingType>Receive</QueueReadingType>
      <QueueReadingMode>Sync</QueueReadingMode>
      <MessageProcessingMaxCount>3</MessageProcessingMaxCount>
      <ReadAndDelete>false</ReadAndDelete>
      <MessaseInvisibilityTimeout>20000</MessaseInvisibilityTimeout>
      <QueueReadTimeout>1000</QueueReadTimeout>
      <!--The time gap (ms) between each polling-->
      <PollingRestDuration>5000</PollingRestDuration>
      <!--To tell if the receive operation once started to be continued indefinitely-->
      <ContinueToReceive>true</ContinueToReceive>
      <TransactionWaitTime>5</TransactionWaitTime>
    </MSMQDetails>
  </MSMQ>
</LISettings>
