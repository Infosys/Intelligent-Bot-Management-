// Copyright 2004, Microsoft Corporation
// Sample Code - Use restricted to terms of use defined in the accompanying license agreement (EULA.doc)

//--------------------------------------------------------------
// Autogenerated by XSDObjectGen version 1.4.1.0
// Schema file: LISettings.xsd
// Creation Date: 5/22/2012 2:51:09 PM
//--------------------------------------------------------------

using System;
using System.Xml.Serialization;
using System.Collections;
using System.Xml.Schema;
using System.ComponentModel;

namespace Infosys.Lif.LegacyIntegratorService
{

    public struct Declarations
    {
        public const string SchemaVersion = "";
    }

    [Serializable]
    public enum MSMQType
    {
        [XmlEnum(Name = "Public")]
        @Public,
        [XmlEnum(Name = "Private")]
        @Private
    }

    [Serializable]
    public enum MSMQReadType
    {
        [XmlEnum(Name = "Receive")]
        Receive,
        [XmlEnum(Name = "Peek")]
        Peek
    }

    [Serializable]
    public enum MSMQReadMode
    {
        [XmlEnum(Name = "Async")]
        Async,
        [XmlEnum(Name = "Sync")]
        Sync
    }

    [Serializable]
    public enum MSMQSendPattern
    {
        [XmlEnum(Name = "None")]
        None,
        [XmlEnum(Name = "RoundRobin")]
        RoundRobin,
        [XmlEnum(Name = "QueueLoad")]
        QueueLoad,
        [XmlEnum(Name = "BroadCast")]
        BroadCast
    }

    [Serializable]
    public enum MemoryQueueReadType
    {
        [XmlEnum(Name = "Receive")]
        Receive,
        [XmlEnum(Name = "Peek")]
        Peek
    }

    [Serializable]
    public enum MemoryQueueReadMode
    {
        [XmlEnum(Name = "Async")]
        Async,
        [XmlEnum(Name = "Sync")]
        Sync
    }

    [Serializable]
    public enum MemoryQueueSendPattern
    {
        [XmlEnum(Name = "None")]
        None,
        [XmlEnum(Name = "RoundRobin")]
        RoundRobin,
        [XmlEnum(Name = "QueueLoad")]
        QueueLoad,
        [XmlEnum(Name = "BroadCast")]
        BroadCast
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class RegionCollection : ArrayList
    {
        public Region Add(Region obj)
        {
            base.Add(obj);
            return obj;
        }

        public Region Add()
        {
            return Add(new Region());
        }

        public void Insert(int index, Region obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(Region obj)
        {
            base.Remove(obj);
        }

        new public Region this[int index]
        {
            get { return (Region)base[index]; }
            set { base[index] = value; }
        }
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class IISDocDetailsCollection : ArrayList
    {
        public IISDocDetails Add(IISDocDetails obj)
        {
            base.Add(obj);
            return obj;
        }

        public IISDocDetails Add()
        {
            return Add(new IISDocDetails());
        }

        public void Insert(int index, IISDocDetails obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(IISDocDetails obj)
        {
            base.Remove(obj);
        }

        new public IISDocDetails this[int index]
        {
            get { return (IISDocDetails)base[index]; }
            set { base[index] = value; }
        }
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class MemoryDocDetailsCollection : ArrayList
    {
        public MemoryDocDetails Add(MemoryDocDetails obj)
        {
            base.Add(obj);
            return obj;
        }

        public MemoryDocDetails Add()
        {
            return Add(new MemoryDocDetails());
        }

        public void Insert(int index, MemoryDocDetails obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(MemoryDocDetails obj)
        {
            base.Remove(obj);
        }

        new public MemoryDocDetails this[int index]
        {
            get { return (MemoryDocDetails)base[index]; }
            set { base[index] = value; }
        }
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class IBMMQDetailsCollection : ArrayList
    {
        public IBMMQDetails Add(IBMMQDetails obj)
        {
            base.Add(obj);
            return obj;
        }

        public IBMMQDetails Add()
        {
            return Add(new IBMMQDetails());
        }

        public void Insert(int index, IBMMQDetails obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(IBMMQDetails obj)
        {
            base.Remove(obj);
        }

        new public IBMMQDetails this[int index]
        {
            get { return (IBMMQDetails)base[index]; }
            set { base[index] = value; }
        }
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class TCPIPDetailsCollection : ArrayList
    {
        public TCPIPDetails Add(TCPIPDetails obj)
        {
            base.Add(obj);
            return obj;
        }

        public TCPIPDetails Add()
        {
            return Add(new TCPIPDetails());
        }

        public void Insert(int index, TCPIPDetails obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(TCPIPDetails obj)
        {
            base.Remove(obj);
        }

        new public TCPIPDetails this[int index]
        {
            get { return (TCPIPDetails)base[index]; }
            set { base[index] = value; }
        }
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class MSMQDetailsCollection : ArrayList
    {
        public MSMQDetails Add(MSMQDetails obj)
        {
            base.Add(obj);
            return obj;
        }

        public MSMQDetails Add()
        {
            return Add(new MSMQDetails());
        }

        public void Insert(int index, MSMQDetails obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(MSMQDetails obj)
        {
            base.Remove(obj);
        }

        new public MSMQDetails this[int index]
        {
            get { return (MSMQDetails)base[index]; }
            set { base[index] = value; }
        }
    }

    [Serializable]
    [EditorBrowsable(EditorBrowsableState.Advanced)]
    public class MemoryQueueDetailsCollection : ArrayList
    {
        public MemoryQueueDetails Add(MemoryQueueDetails obj)
        {
            base.Add(obj);
            return obj;
        }

        public MemoryQueueDetails Add()
        {
            return Add(new MemoryQueueDetails());
        }

        public void Insert(int index, MemoryQueueDetails obj)
        {
            base.Insert(index, obj);
        }

        public void Remove(MemoryQueueDetails obj)
        {
            base.Remove(obj);
        }

        new public MemoryQueueDetails this[int index]
        {
            get { return (MemoryQueueDetails)base[index]; }
            set { base[index] = value; }
        }
    }




    [XmlRoot(ElementName = "LISettings", IsNullable = false), Serializable]
    public class LISettings
    {

        [XmlElement(Type = typeof(HostRegion), ElementName = "HostRegion", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public HostRegion __HostRegion;

        [XmlIgnore]
        public HostRegion HostRegion
        {
            get
            {
                if (__HostRegion == null) __HostRegion = new HostRegion();
                return __HostRegion;
            }
            set { __HostRegion = value; }
        }

        [XmlElement(Type = typeof(IBMMQ), ElementName = "IBMMQ", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public IBMMQ __IBMMQ;

        [XmlIgnore]
        public IBMMQ IBMMQ
        {
            get
            {
                if (__IBMMQ == null) __IBMMQ = new IBMMQ();
                return __IBMMQ;
            }
            set { __IBMMQ = value; }
        }

        [XmlElement(Type = typeof(HIS), ElementName = "HIS", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public HIS __HIS;

        [XmlIgnore]
        public HIS HIS
        {
            get
            {
                if (__HIS == null) __HIS = new HIS();
                return __HIS;
            }
            set { __HIS = value; }
        }

        [XmlElement(Type = typeof(TCPIP), ElementName = "TCPIP", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public TCPIP __TCPIP;

        [XmlIgnore]
        public TCPIP TCPIP
        {
            get
            {
                if (__TCPIP == null) __TCPIP = new TCPIP();
                return __TCPIP;
            }
            set { __TCPIP = value; }
        }

        [XmlElement(Type = typeof(MSMQ), ElementName = "MSMQ", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public MSMQ __MSMQ;

        [XmlIgnore]
        public MSMQ MSMQ
        {
            get
            {
                if (__MSMQ == null) __MSMQ = new MSMQ();
                return __MSMQ;
            }
            set { __MSMQ = value; }
        }

        [XmlElement(Type = typeof(IISDoc), ElementName = "IISDoc", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public IISDoc __IISDoc;

        [XmlIgnore]
        public IISDoc IISDoc
        {
            get
            {
                if (__IISDoc == null) __IISDoc = new IISDoc();
                return __IISDoc;
            }
            set { __IISDoc = value; }
        }

        [XmlElement(Type = typeof(MemoryDoc), ElementName = "MemoryDoc", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public MemoryDoc __MemoryDoc;

        [XmlIgnore]
        public MemoryDoc MemoryDoc
        {
            get
            {
                if (__MemoryDoc == null) __MemoryDoc = new MemoryDoc();
                return __MemoryDoc;
            }
            set { __MemoryDoc = value; }
        }

        [XmlElement(ElementName = "EnablePerformanceCounters", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __EnablePerformanceCounters;

        [XmlIgnore]
        public string EnablePerformanceCounters
        {
            get { return __EnablePerformanceCounters; }
            set { __EnablePerformanceCounters = value; }
        }

        [XmlElement(Type = typeof(MemoryQueue), ElementName = "MemoryQueue", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public MemoryQueue __MemoryQueue;

        [XmlIgnore]
        public MemoryQueue MemoryQueue
        {
            get
            {
                if (__MemoryQueue == null) __MemoryQueue = new MemoryQueue();
                return __MemoryQueue;
            }
            set { __MemoryQueue = value; }
        }

        public LISettings()
        {
        }
    }


    [XmlType(TypeName = "HostRegion"), Serializable]
    public class HostRegion
    {
        [System.Runtime.InteropServices.DispIdAttribute(-4)]
        public IEnumerator GetEnumerator()
        {
            return RegionCollection.GetEnumerator();
        }

        public Region Add(Region obj)
        {
            return RegionCollection.Add(obj);
        }

        [XmlIgnore]
        public Region this[int index]
        {
            get { return (Region)RegionCollection[index]; }
        }

        [XmlIgnore]
        public int Count
        {
            get { return RegionCollection.Count; }
        }

        public void Clear()
        {
            RegionCollection.Clear();
        }

        public Region Remove(int index)
        {
            Region obj = RegionCollection[index];
            RegionCollection.Remove(obj);
            return obj;
        }

        public void Remove(object obj)
        {
            RegionCollection.Remove(obj);
        }

        [XmlElement(Type = typeof(Region), ElementName = "Region", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public RegionCollection __RegionCollection;

        [XmlIgnore]
        public RegionCollection RegionCollection
        {
            get
            {
                if (__RegionCollection == null) __RegionCollection = new RegionCollection();
                return __RegionCollection;
            }
            set { __RegionCollection = value; }
        }

        public HostRegion()
        {
        }
    }


    [XmlType(TypeName = "Region"), Serializable]
    public class Region
    {

        [XmlElement(ElementName = "Name", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Name;

        [XmlIgnore]
        public string Name
        {
            get { return __Name; }
            set { __Name = value; }
        }

        [XmlElement(ElementName = "TransportMedium", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TransportMedium;

        [XmlIgnore]
        public string TransportMedium
        {
            get { return __TransportMedium; }
            set { __TransportMedium = value; }
        }

        [XmlElement(ElementName = "TransportName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TransportName;

        [XmlIgnore]
        public string TransportName
        {
            get { return __TransportName; }
            set { __TransportName = value; }
        }

        [XmlElement(ElementName = "CommunicationType", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __CommunicationType;

        [XmlIgnore]
        public string CommunicationType
        {
            get { return __CommunicationType; }
            set { __CommunicationType = value; }
        }

        public Region()
        {
        }
    }


    [XmlType(TypeName = "IBMMQ"), Serializable]
    public class IBMMQ
    {

        [XmlElement(Type = typeof(Infosys.Lif.LegacyIntegratorService.Connection), ElementName = "Connection", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Infosys.Lif.LegacyIntegratorService.Connection __Connection;

        [XmlIgnore]
        public Infosys.Lif.LegacyIntegratorService.Connection Connection
        {
            get
            {
                if (__Connection == null) __Connection = new Infosys.Lif.LegacyIntegratorService.Connection();
                return __Connection;
            }
            set { __Connection = value; }
        }

        [XmlElement(ElementName = "DllPath", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DllPath;

        [XmlIgnore]
        public string DllPath
        {
            get { return __DllPath; }
            set { __DllPath = value; }
        }

        [XmlElement(ElementName = "TypeName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TypeName;

        [XmlIgnore]
        public string TypeName
        {
            get { return __TypeName; }
            set { __TypeName = value; }
        }

        [XmlElement(Type = typeof(IBMMQDetails), ElementName = "IBMMQDetails", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public IBMMQDetailsCollection __IBMMQDetailsCollection;

        [XmlIgnore]
        public IBMMQDetailsCollection IBMMQDetailsCollection
        {
            get
            {
                if (__IBMMQDetailsCollection == null) __IBMMQDetailsCollection = new IBMMQDetailsCollection();
                return __IBMMQDetailsCollection;
            }
            set { __IBMMQDetailsCollection = value; }
        }

        [XmlElement(ElementName = "ActiveTimeForConnection", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __ActiveTimeForConnection;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ActiveTimeForConnectionSpecified;

        [XmlIgnore]
        public int ActiveTimeForConnection
        {
            get { return __ActiveTimeForConnection; }
            set { __ActiveTimeForConnection = value; __ActiveTimeForConnectionSpecified = true; }
        }

        [XmlElement(ElementName = "PoolScanFrequency", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __PoolScanFrequency;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __PoolScanFrequencySpecified;

        [XmlIgnore]
        public int PoolScanFrequency
        {
            get { return __PoolScanFrequency; }
            set { __PoolScanFrequency = value; __PoolScanFrequencySpecified = true; }
        }

        [XmlElement(ElementName = "EnablePerformanceCounters", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __EnablePerformanceCounters;

        [XmlIgnore]
        public string EnablePerformanceCounters
        {
            get { return __EnablePerformanceCounters; }
            set { __EnablePerformanceCounters = value; }
        }

        public IBMMQ()
        {
        }
    }


    [XmlType(TypeName = "IBMMQDetails"), Serializable]
    public class IBMMQDetails
    {

        [XmlElement(Type = typeof(Infosys.Lif.LegacyIntegratorService.Connection), ElementName = "Connection", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Infosys.Lif.LegacyIntegratorService.Connection __Connection;

        [XmlIgnore]
        public Infosys.Lif.LegacyIntegratorService.Connection Connection
        {
            get
            {
                if (__Connection == null) __Connection = new Infosys.Lif.LegacyIntegratorService.Connection();
                return __Connection;
            }
            set { __Connection = value; }
        }

        [XmlElement(ElementName = "TransportName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TransportName;

        [XmlIgnore]
        public string TransportName
        {
            get { return __TransportName; }
            set { __TransportName = value; }
        }

        [XmlElement(ElementName = "ChannelName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ChannelName;

        [XmlIgnore]
        public string ChannelName
        {
            get { return __ChannelName; }
            set { __ChannelName = value; }
        }

        [XmlElement(ElementName = "ConnectionName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ConnectionName;

        [XmlIgnore]
        public string ConnectionName
        {
            get { return __ConnectionName; }
            set { __ConnectionName = value; }
        }

        [XmlElement(ElementName = "Port", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __Port;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __PortSpecified;

        [XmlIgnore]
        public int Port
        {
            get { return __Port; }
            set { __Port = value; __PortSpecified = true; }
        }

        [XmlElement(ElementName = "QueueManager", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __QueueManager;

        [XmlIgnore]
        public string QueueManager
        {
            get { return __QueueManager; }
            set { __QueueManager = value; }
        }

        [XmlElement(ElementName = "RequestQueue", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __RequestQueue;

        [XmlIgnore]
        public string RequestQueue
        {
            get { return __RequestQueue; }
            set { __RequestQueue = value; }
        }

        [XmlElement(ElementName = "ResponseQueue", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ResponseQueue;

        [XmlIgnore]
        public string ResponseQueue
        {
            get { return __ResponseQueue; }
            set { __ResponseQueue = value; }
        }

        [XmlElement(ElementName = "QueueType", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __QueueType;

        [XmlIgnore]
        public string QueueType
        {
            get { return __QueueType; }
            set { __QueueType = value; }
        }

        [XmlElement(ElementName = "ModelQueueName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ModelQueueName;

        [XmlIgnore]
        public string ModelQueueName
        {
            get { return __ModelQueueName; }
            set { __ModelQueueName = value; }
        }

        [XmlElement(ElementName = "ExpiryTime", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __ExpiryTime;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ExpiryTimeSpecified;

        [XmlIgnore]
        public int ExpiryTime
        {
            get { return __ExpiryTime; }
            set { __ExpiryTime = value; __ExpiryTimeSpecified = true; }
        }

        [XmlElement(ElementName = "Persistence", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Persistence;

        [XmlIgnore]
        public string Persistence
        {
            get { return __Persistence; }
            set { __Persistence = value; }
        }

        [XmlElement(ElementName = "TimeOut", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __TimeOut;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __TimeOutSpecified;

        [XmlIgnore]
        public int TimeOut
        {
            get { return __TimeOut; }
            set { __TimeOut = value; __TimeOutSpecified = true; }
        }

        [XmlElement(ElementName = "EnableTrace", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __EnableTrace;

        [XmlIgnore]
        public string EnableTrace
        {
            get { return __EnableTrace; }
            set { __EnableTrace = value; }
        }

        [XmlElement(ElementName = "SSLRequired", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __SSLRequired;

        [XmlIgnore]
        public string SSLRequired
        {
            get { return __SSLRequired; }
            set { __SSLRequired = value; }
        }

        [XmlElement(ElementName = "CertificatePath", IsNullable = true, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __CertificatePath;

        [XmlIgnore]
        public string CertificatePath
        {
            get { return __CertificatePath; }
            set { __CertificatePath = value; }
        }

        [XmlElement(ElementName = "EncryptionType", IsNullable = true, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __EncryptionType;

        [XmlIgnore]
        public string EncryptionType
        {
            get { return __EncryptionType; }
            set { __EncryptionType = value; }
        }

        [XmlElement(ElementName = "RetryCount", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __RetryCount;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __RetryCountSpecified;

        [XmlIgnore]
        public int RetryCount
        {
            get { return __RetryCount; }
            set { __RetryCount = value; __RetryCountSpecified = true; }
        }

        [XmlElement(ElementName = "RetryAll", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __RetryAll;

        [XmlIgnore]
        public string RetryAll
        {
            get { return __RetryAll; }
            set { __RetryAll = value; }
        }

        public IBMMQDetails()
        {
        }
    }


    [XmlType(TypeName = "HIS"), Serializable]
    public class HIS
    {

        [XmlElement(ElementName = "DllPath", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DllPath;

        [XmlIgnore]
        public string DllPath
        {
            get { return __DllPath; }
            set { __DllPath = value; }
        }

        [XmlElement(ElementName = "TypeName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TypeName;

        [XmlIgnore]
        public string TypeName
        {
            get { return __TypeName; }
            set { __TypeName = value; }
        }

        [XmlElement(ElementName = "EnableTrace", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __EnableTrace;

        [XmlIgnore]
        public string EnableTrace
        {
            get { return __EnableTrace; }
            set { __EnableTrace = value; }
        }

        [XmlElement(ElementName = "EnablePerformanceCounters", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __EnablePerformanceCounters;

        [XmlIgnore]
        public string EnablePerformanceCounters
        {
            get { return __EnablePerformanceCounters; }
            set { __EnablePerformanceCounters = value; }
        }

        public HIS()
        {
        }
    }


    [XmlType(TypeName = "TCPIP"), Serializable]
    public class TCPIP
    {

        [XmlElement(ElementName = "DllPath", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DllPath;

        [XmlIgnore]
        public string DllPath
        {
            get { return __DllPath; }
            set { __DllPath = value; }
        }

        [XmlElement(ElementName = "TypeName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TypeName;

        [XmlIgnore]
        public string TypeName
        {
            get { return __TypeName; }
            set { __TypeName = value; }
        }

        [XmlElement(Type = typeof(TCPIPDetails), ElementName = "TCPIPDetails", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public TCPIPDetailsCollection __TCPIPDetailsCollection;

        [XmlIgnore]
        public TCPIPDetailsCollection TCPIPDetailsCollection
        {
            get
            {
                if (__TCPIPDetailsCollection == null) __TCPIPDetailsCollection = new TCPIPDetailsCollection();
                return __TCPIPDetailsCollection;
            }
            set { __TCPIPDetailsCollection = value; }
        }

        public TCPIP()
        {
        }
    }


    [XmlType(TypeName = "TCPIPDetails"), Serializable]
    public class TCPIPDetails
    {

        [XmlElement(ElementName = "TransportName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TransportName;

        [XmlIgnore]
        public string TransportName
        {
            get { return __TransportName; }
            set { __TransportName = value; }
        }

        [XmlElement(ElementName = "Mode", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __Mode;

        [XmlIgnore]
        public string Mode
        {
            get { return __Mode; }
            set { __Mode = value; }
        }

        [XmlElement(ElementName = "IPAddress", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __IPAddress;

        [XmlIgnore]
        public string IPAddress
        {
            get { return __IPAddress; }
            set { __IPAddress = value; }
        }

        [XmlElement(ElementName = "Port", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __Port;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __PortSpecified;

        [XmlIgnore]
        public int Port
        {
            get { return __Port; }
            set { __Port = value; __PortSpecified = true; }
        }

        [XmlElement(Type = typeof(Infosys.Lif.LegacyIntegratorService.Connection), ElementName = "Connection", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Infosys.Lif.LegacyIntegratorService.Connection __Connection;

        [XmlIgnore]
        public Infosys.Lif.LegacyIntegratorService.Connection Connection
        {
            get
            {
                if (__Connection == null) __Connection = new Infosys.Lif.LegacyIntegratorService.Connection();
                return __Connection;
            }
            set { __Connection = value; }
        }

        [XmlElement(ElementName = "TransactionID", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TransactionID;

        [XmlIgnore]
        public string TransactionID
        {
            get { return __TransactionID; }
            set { __TransactionID = value; }
        }

        [XmlElement(ElementName = "HostProgID", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __HostProgID;

        [XmlIgnore]
        public string HostProgID
        {
            get { return __HostProgID; }
            set { __HostProgID = value; }
        }

        [XmlElement(ElementName = "EnableTrace", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __EnableTrace;

        [XmlIgnore]
        public string EnableTrace
        {
            get { return __EnableTrace; }
            set { __EnableTrace = value; }
        }

        [XmlElement(ElementName = "EnablePerformanceCounters", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __EnablePerformanceCounters;

        [XmlIgnore]
        public string EnablePerformanceCounters
        {
            get { return __EnablePerformanceCounters; }
            set { __EnablePerformanceCounters = value; }
        }

        [XmlElement(ElementName = "TimeOut", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __TimeOut;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __TimeOutSpecified;

        [XmlIgnore]
        public int TimeOut
        {
            get { return __TimeOut; }
            set { __TimeOut = value; __TimeOutSpecified = true; }
        }

        public TCPIPDetails()
        {
        }
    }


    [XmlType(TypeName = "MSMQ"), Serializable]
    public class MSMQ
    {

        [XmlElement(ElementName = "DllPath", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DllPath;

        [XmlIgnore]
        public string DllPath
        {
            get { return __DllPath; }
            set { __DllPath = value; }
        }

        [XmlElement(ElementName = "TypeName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TypeName;

        [XmlIgnore]
        public string TypeName
        {
            get { return __TypeName; }
            set { __TypeName = value; }
        }

        [XmlElement(Type = typeof(MSMQDetails), ElementName = "MSMQDetails", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public MSMQDetailsCollection __MSMQDetailsCollection;

        [XmlIgnore]
        public MSMQDetailsCollection MSMQDetailsCollection
        {
            get
            {
                if (__MSMQDetailsCollection == null) __MSMQDetailsCollection = new MSMQDetailsCollection();
                return __MSMQDetailsCollection;
            }
            set { __MSMQDetailsCollection = value; }
        }

        public MSMQ()
        {
        }
    }


    [XmlType(TypeName = "MSMQDetails"), Serializable]
    public class MSMQDetails
    {

        [XmlElement(ElementName = "TransportName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TransportName;

        [XmlIgnore]
        public string TransportName
        {
            get { return __TransportName; }
            set { __TransportName = value; }
        }

        [XmlElement(ElementName = "ServerName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ServerName;

        [XmlIgnore]
        public string ServerName
        {
            get { return __ServerName; }
            set { __ServerName = value; }
        }

        [XmlElement(ElementName = "QueueName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __QueueName;

        [XmlIgnore]
        public string QueueName
        {
            get { return __QueueName; }
            set { __QueueName = value; }
        }

        [XmlElement(ElementName = "SecondaryQueues", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __SecondaryQueues;

        [XmlIgnore]
        public string SecondaryQueues
        {
            get { return __SecondaryQueues; }
            set { __SecondaryQueues = value; }
        }

        [XmlElement(ElementName = "PoisonQueueName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __PoisonQueueName;

        [XmlIgnore]
        public string PoisonQueueName
        {
            get { return __PoisonQueueName; }
            set { __PoisonQueueName = value; }
        }

        [XmlElement(ElementName = "MessageLabel", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __MessageLabel;

        [XmlIgnore]
        public string MessageLabel
        {
            get { return __MessageLabel; }
            set { __MessageLabel = value; }
        }

        [XmlElement(ElementName = "QueueType", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Infosys.Lif.LegacyIntegratorService.MSMQType __QueueType;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __QueueTypeSpecified;

        [XmlIgnore]
        public Infosys.Lif.LegacyIntegratorService.MSMQType QueueType
        {
            get { return __QueueType; }
            set { __QueueType = value; __QueueTypeSpecified = true; }
        }

        [XmlElement(ElementName = "SendPattern", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Infosys.Lif.LegacyIntegratorService.MSMQSendPattern __SendPattern;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __SendPatternSpecified;

        [XmlIgnore]
        public Infosys.Lif.LegacyIntegratorService.MSMQSendPattern SendPattern
        {
            get { return __SendPattern; }
            set { __SendPattern = value; __SendPatternSpecified = true; }
        }

        [XmlElement(ElementName = "QueueReadingType", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Infosys.Lif.LegacyIntegratorService.MSMQReadType __QueueReadingType;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __QueueReadingTypeSpecified;

        [XmlIgnore]
        public Infosys.Lif.LegacyIntegratorService.MSMQReadType QueueReadingType
        {
            get { return __QueueReadingType; }
            set { __QueueReadingType = value; __QueueReadingTypeSpecified = true; }
        }

        [XmlElement(ElementName = "QueueReadingMode", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Infosys.Lif.LegacyIntegratorService.MSMQReadMode __QueueReadingMode;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __QueueReadingModeSpecified;

        [XmlIgnore]
        public Infosys.Lif.LegacyIntegratorService.MSMQReadMode QueueReadingMode
        {
            get { return __QueueReadingMode; }
            set { __QueueReadingMode = value; __QueueReadingModeSpecified = true; }
        }

        [XmlElement(ElementName = "MessageProcessingMaxCount", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __MessageProcessingMaxCount = 3;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __MessageProcessingMaxCountSpecified;

        [XmlIgnore]
        public int MessageProcessingMaxCount
        {
            get { return __MessageProcessingMaxCount; }
            set { __MessageProcessingMaxCount = value; __MessageProcessingMaxCountSpecified = true; }
        }

        [XmlElement(ElementName = "QueueLoadLimit", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __QueueLoadLimit = 10;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __QueueLoadLimitSpecified;

        [XmlIgnore]
        public int QueueLoadLimit
        {
            get { return __QueueLoadLimit; }
            set { __QueueLoadLimit = value; __QueueLoadLimitSpecified = true; }
        }

        [XmlElement(ElementName = "ReadAndDelete", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "boolean")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ReadAndDelete = true;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ReadAndDeleteSpecified;

        [XmlIgnore]
        public bool ReadAndDelete
        {
            get { return __ReadAndDelete; }
            set { __ReadAndDelete = value; __ReadAndDeleteSpecified = true; }
        }

        [XmlElement(ElementName = "ContinueToReceive", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "boolean")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ContinueToReceive = true;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ContinueToReceiveSpecified;

        [XmlIgnore]
        public bool ContinueToReceive
        {
            get { return __ContinueToReceive; }
            set { __ContinueToReceive = value; __ContinueToReceiveSpecified = true; }
        }
        
        [XmlElement(ElementName = "IsQueueTransactional", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "boolean")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __IsQueueTransactional = false;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __IsQueueTransactionalSpecified;

        [XmlIgnore]
        public bool IsQueueTransactional
        {
            get { return __IsQueueTransactional; }
            set { __IsQueueTransactional = value; __IsQueueTransactionalSpecified = true; }
        }

        [XmlElement(ElementName = "MessaseInvisibilityTimeout", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "long")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public long __MessaseInvisibilityTimeout = 60000;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __MessaseInvisibilityTimeoutSpecified;

        [XmlIgnore]
        public long MessaseInvisibilityTimeout
        {
            get { return __MessaseInvisibilityTimeout; }
            set { __MessaseInvisibilityTimeout = value; __MessaseInvisibilityTimeoutSpecified = true; }
        }

        [XmlElement(ElementName = "QueueReadTimeout", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "long")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public long __QueueReadTimeout = 1000;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __QueueReadTimeoutSpecified;

        [XmlIgnore]
        public long QueueReadTimeout
        {
            get { return __QueueReadTimeout; }
            set { __QueueReadTimeout = value; __QueueReadTimeoutSpecified = true; }
        }

        [XmlElement(ElementName = "PollingRestDuration", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __PollingRestDuration = 1000;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __PollingRestDurationSpecified;

        [XmlIgnore]
        public int PollingRestDuration
        {
            get { return __PollingRestDuration; }
            set { __PollingRestDuration = value; __PollingRestDurationSpecified = true; }
        }

       
        // Added new attributes - QueueNotRespondTime

        [XmlElement(ElementName = "TransactionWaitTime", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __TransactionWaitTime = 5;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __TransactionWaitTimeSpecified;

        [XmlIgnore]
        public int TransactionWaitTime
        {
            get { return __TransactionWaitTime; }
            set { __TransactionWaitTime = value; __TransactionWaitTimeSpecified = true; }
        }




        public MSMQDetails()
        {
        }
    }


    [XmlType(TypeName = "IISDoc"), Serializable]
    public class IISDoc
    {

        [XmlElement(ElementName = "DllPath", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DllPath;

        [XmlIgnore]
        public string DllPath
        {
            get { return __DllPath; }
            set { __DllPath = value; }
        }

        [XmlElement(ElementName = "TypeName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TypeName;

        [XmlIgnore]
        public string TypeName
        {
            get { return __TypeName; }
            set { __TypeName = value; }
        }

        [XmlElement(Type = typeof(IISDocDetails), ElementName = "IISDocDetails", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public IISDocDetailsCollection __IISDocDetailsCollection;

        [XmlIgnore]
        public IISDocDetailsCollection IISDocDetailsCollection
        {
            get
            {
                if (__IISDocDetailsCollection == null) __IISDocDetailsCollection = new IISDocDetailsCollection();
                return __IISDocDetailsCollection;
            }
            set { __IISDocDetailsCollection = value; }
        }

        public IISDoc()
        {
        }
    }


    [XmlType(TypeName = "IISDocDetails"), Serializable]
    public class IISDocDetails
    {

        [XmlElement(ElementName = "TransportName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TransportName;

        [XmlIgnore]
        public string TransportName
        {
            get { return __TransportName; }
            set { __TransportName = value; }
        }

        [XmlElement(ElementName = "DataBlockSize", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __DataBlockSize;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __DataBlockSizeSpecified;

        [XmlIgnore]
        public int DataBlockSize
        {
            get { return __DataBlockSize; }
            set { __DataBlockSize = value; __DataBlockSizeSpecified = true; }
        }

        [XmlElement(ElementName = "DocumentsVirtualDirectoryFromRoot", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DocumentsVirtualDirectoryFromRoot;

        [XmlIgnore]
        public string DocumentsVirtualDirectoryFromRoot
        {
            get { return __DocumentsVirtualDirectoryFromRoot; }
            set { __DocumentsVirtualDirectoryFromRoot = value; }
        }

        public IISDocDetails()
        {
        }
    }


    [XmlRoot(ElementName = "Connection", IsNullable = false), Serializable]
    public class Connection
    {

        [XmlElement(ElementName = "ConnectionModel", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __ConnectionModel;

        [XmlIgnore]
        public string ConnectionModel
        {
            get { return __ConnectionModel; }
            set { __ConnectionModel = value; }
        }

        [XmlElement(Type = typeof(Pooling), ElementName = "Pooling", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Pooling __Pooling;

        [XmlIgnore]
        public Pooling Pooling
        {
            get
            {
                if (__Pooling == null) __Pooling = new Pooling();
                return __Pooling;
            }
            set { __Pooling = value; }
        }

        [XmlElement(ElementName = "ConnectionTimeOut", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __ConnectionTimeOut;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ConnectionTimeOutSpecified;

        [XmlIgnore]
        public int ConnectionTimeOut
        {
            get { return __ConnectionTimeOut; }
            set { __ConnectionTimeOut = value; __ConnectionTimeOutSpecified = true; }
        }

        public Connection()
        {
        }
    }


    [XmlType(TypeName = "Pooling"), Serializable]
    public class Pooling
    {

        [XmlElement(ElementName = "MinSize", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __MinSize;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __MinSizeSpecified;

        [XmlIgnore]
        public int MinSize
        {
            get { return __MinSize; }
            set { __MinSize = value; __MinSizeSpecified = true; }
        }

        [XmlElement(ElementName = "MaxSize", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __MaxSize;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __MaxSizeSpecified;

        [XmlIgnore]
        public int MaxSize
        {
            get { return __MaxSize; }
            set { __MaxSize = value; __MaxSizeSpecified = true; }
        }

        public Pooling()
        {
        }
    }

    [XmlType(TypeName = "MemoryQueue"), Serializable]
    public class MemoryQueue
    {

        [XmlElement(ElementName = "DllPath", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DllPath;

        [XmlIgnore]
        public string DllPath
        {
            get { return __DllPath; }
            set { __DllPath = value; }
        }

        [XmlElement(ElementName = "TypeName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TypeName;

        [XmlIgnore]
        public string TypeName
        {
            get { return __TypeName; }
            set { __TypeName = value; }
        }

        [XmlElement(Type = typeof(MemoryQueueDetails), ElementName = "MemoryQueueDetails", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public MemoryQueueDetailsCollection __MemoryQueueDetailsCollection;

        [XmlIgnore]
        public MemoryQueueDetailsCollection MemoryQueueDetailsCollection
        {
            get
            {
                if (__MemoryQueueDetailsCollection == null) __MemoryQueueDetailsCollection = new MemoryQueueDetailsCollection();
                return __MemoryQueueDetailsCollection;
            }
            set { __MemoryQueueDetailsCollection = value; }
        }

        public MemoryQueue()
        {
        }
    }

    [XmlType(TypeName = "MemoryQueueDetails"), Serializable]
    public class MemoryQueueDetails
    {

        [XmlElement(ElementName = "TransportName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TransportName;

        [XmlIgnore]
        public string TransportName
        {
            get { return __TransportName; }
            set { __TransportName = value; }
        }

        [XmlElement(ElementName = "QueueName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __QueueName;

        [XmlIgnore]
        public string QueueName
        {
            get { return __QueueName; }
            set { __QueueName = value; }
        }

        [XmlElement(ElementName = "MessageLabel", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __MessageLabel;

        [XmlIgnore]
        public string MessageLabel
        {
            get { return __MessageLabel; }
            set { __MessageLabel = value; }
        }

        [XmlElement(ElementName = "SecondaryQueues", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __SecondaryQueues;

        [XmlIgnore]
        public string SecondaryQueues
        {
            get { return __SecondaryQueues; }
            set { __SecondaryQueues = value; }
        }

       
        [XmlElement(ElementName = "SendPattern", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Infosys.Lif.LegacyIntegratorService.MemoryQueueSendPattern __SendPattern;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __SendPatternSpecified;

        [XmlIgnore]
        public Infosys.Lif.LegacyIntegratorService.MemoryQueueSendPattern SendPattern
        {
            get { return __SendPattern; }
            set { __SendPattern = value; __SendPatternSpecified = true; }
        }

        [XmlElement(ElementName = "QueueReadingType", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Infosys.Lif.LegacyIntegratorService.MemoryQueueReadType __QueueReadingType;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __QueueReadingTypeSpecified;

        [XmlIgnore]
        public Infosys.Lif.LegacyIntegratorService.MemoryQueueReadType QueueReadingType
        {
            get { return __QueueReadingType; }
            set { __QueueReadingType = value; __QueueReadingTypeSpecified = true; }
        }

        [XmlElement(ElementName = "QueueReadingMode", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public Infosys.Lif.LegacyIntegratorService.MemoryQueueReadMode __QueueReadingMode;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __QueueReadingModeSpecified;

        [XmlIgnore]
        public Infosys.Lif.LegacyIntegratorService.MemoryQueueReadMode QueueReadingMode
        {
            get { return __QueueReadingMode; }
            set { __QueueReadingMode = value; __QueueReadingModeSpecified = true; }
        }

        [XmlElement(ElementName = "MessageProcessingMaxCount", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __MessageProcessingMaxCount = 3;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __MessageProcessingMaxCountSpecified;

        [XmlIgnore]
        public int MessageProcessingMaxCount
        {
            get { return __MessageProcessingMaxCount; }
            set { __MessageProcessingMaxCount = value; __MessageProcessingMaxCountSpecified = true; }
        }

        [XmlElement(ElementName = "QueueLoadLimit", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __QueueLoadLimit = 10;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __QueueLoadLimitSpecified;

        [XmlIgnore]
        public int QueueLoadLimit
        {
            get { return __QueueLoadLimit; }
            set { __QueueLoadLimit = value; __QueueLoadLimitSpecified = true; }
        }

        [XmlElement(ElementName = "ReadAndDelete", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "boolean")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ReadAndDelete = true;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ReadAndDeleteSpecified;

        [XmlIgnore]
        public bool ReadAndDelete
        {
            get { return __ReadAndDelete; }
            set { __ReadAndDelete = value; __ReadAndDeleteSpecified = true; }
        }

        [XmlElement(ElementName = "ContinueToReceive", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "boolean")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ContinueToReceive = true;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __ContinueToReceiveSpecified;

        [XmlIgnore]
        public bool ContinueToReceive
        {
            get { return __ContinueToReceive; }
            set { __ContinueToReceive = value; __ContinueToReceiveSpecified = true; }
        }

        

        [XmlElement(ElementName = "QueueReadTimeout", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "long")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public long __QueueReadTimeout = 1000;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __QueueReadTimeoutSpecified;

        [XmlIgnore]
        public long QueueReadTimeout
        {
            get { return __QueueReadTimeout; }
            set { __QueueReadTimeout = value; __QueueReadTimeoutSpecified = true; }
        }

        [XmlElement(ElementName = "PollingRestDuration", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __PollingRestDuration = 1000;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __PollingRestDurationSpecified;

        [XmlIgnore]
        public int PollingRestDuration
        {
            get { return __PollingRestDuration; }
            set { __PollingRestDuration = value; __PollingRestDurationSpecified = true; }
        }


        // Added new attributes - QueueNotRespondTime

        [XmlElement(ElementName = "TransactionWaitTime", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __TransactionWaitTime = 5;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __TransactionWaitTimeSpecified;

        [XmlIgnore]
        public int TransactionWaitTime
        {
            get { return __TransactionWaitTime; }
            set { __TransactionWaitTime = value; __TransactionWaitTimeSpecified = true; }
        }




        public MemoryQueueDetails()
        {
        }
    }

    [XmlType(TypeName = "MemoryDoc"), Serializable]
    public class MemoryDoc
    {

        [XmlElement(ElementName = "DllPath", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DllPath;

        [XmlIgnore]
        public string DllPath
        {
            get { return __DllPath; }
            set { __DllPath = value; }
        }

        [XmlElement(ElementName = "TypeName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TypeName;

        [XmlIgnore]
        public string TypeName
        {
            get { return __TypeName; }
            set { __TypeName = value; }
        }

        [XmlElement(Type = typeof(MemoryDocDetails), ElementName = "MemoryDocDetails", IsNullable = false, Form = XmlSchemaForm.Qualified)]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public MemoryDocDetailsCollection __MemoryDocDetailsCollection;

        [XmlIgnore]
        public MemoryDocDetailsCollection MemoryDocDetailsCollection
        {
            get
            {
                if (__MemoryDocDetailsCollection == null) __MemoryDocDetailsCollection = new MemoryDocDetailsCollection();
                return __MemoryDocDetailsCollection;
            }
            set { __MemoryDocDetailsCollection = value; }
        }

        public MemoryDoc()
        {
        }
    }


    [XmlType(TypeName = "MemoryDocDetails"), Serializable]
    public class MemoryDocDetails
    {

        [XmlElement(ElementName = "TransportName", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __TransportName;

        [XmlIgnore]
        public string TransportName
        {
            get { return __TransportName; }
            set { __TransportName = value; }
        }

        [XmlElement(ElementName = "DataBlockSize", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __DataBlockSize;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __DataBlockSizeSpecified;

        [XmlIgnore]
        public int DataBlockSize
        {
            get { return __DataBlockSize; }
            set { __DataBlockSize = value; __DataBlockSizeSpecified = true; }
        }

        [XmlElement(ElementName = "DocumentsVirtualDirectoryFromRoot", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "string")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public string __DocumentsVirtualDirectoryFromRoot;

        [XmlIgnore]
        public string DocumentsVirtualDirectoryFromRoot
        {
            get { return __DocumentsVirtualDirectoryFromRoot; }
            set { __DocumentsVirtualDirectoryFromRoot = value; }
        }

        [XmlElement(ElementName = "MemoryCacheSlidingExpirationInMins", IsNullable = false, Form = XmlSchemaForm.Qualified, DataType = "int")]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public int __MemoryCacheSlidingExpiration = 10;

        [XmlIgnore]
        [EditorBrowsable(EditorBrowsableState.Advanced)]
        public bool __MemoryCacheSlidingExpirationSpecified;

        [XmlIgnore]
        public int MemoryCacheSlidingExpiration
        {
            get { return __MemoryCacheSlidingExpiration; }
            set { __MemoryCacheSlidingExpiration = value; __MemoryCacheSlidingExpirationSpecified = true; }
        }

        public MemoryDocDetails()
        {
        }
    }


}
