$MethodTemplate
	/// <summary>
    /// create service interface of "##ServiceName##" service
    /// </summary>
	//provide XML serializer format and service contract attribute details
	[XmlSerializerFormat]
    [ServiceContract(Name = "I##ServiceName##", Namespace = "http://##ServiceContractNamespace##")]    
    public interface I##ServiceName##
    {
		/// <summary>
        /// create an operation contract for the contract method ##MethodName##
        /// </summary>
        /// <param name="request">request to be sent to host</param>
        /// <returns>response message recieved from the host</returns>
        [OperationContract(IsTerminating = false, IsInitiating = true, IsOneWay = false, AsyncPattern = false, 
			Action = "##MethodName##")]
        ResponseMessageType ##MethodName##(RequestMessageType request);        
    }		
$NameSpacesImport
$end
/******************************************************************************
This class was code generated by Legacy Workbench.

This class represents the service interface for the service to be exposed.

Copyright (c) 2003 - 2008 Infosys Technologies Ltd. All Rights Reserved.
******************************************************************************/
using System;
using System.Collections.Generic;
using System.ServiceModel;
using System.Runtime.Serialization;
using System.Text;


namespace ##ServiceContractNamespace##
{    
    ##MethodBodies##
}